<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ===========================================
         SENIOR UX ENHANCEMENTS
         Additional improvements for users 60+
         =========================================== -->

    <!-- Enhanced Button Hover Animations -->
    <Style x:Key="SeniorFriendlyButtonBase" TargetType="Button">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Padding" Value="15,10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Enhanced hover effect for better visibility -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="ButtonBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#333333" Direction="270" ShadowDepth="3" BlurRadius="8" Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!-- Enhanced focus effect -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#FFFF00"/>
                            <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="4"/>
                        </Trigger>
                        <!-- Press effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                </TransformGroup>
                            </Setter>
                        </Trigger>
                        <!-- Disabled state -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0"/>
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Large Action Button for Critical Actions -->
    <Style x:Key="LargeActionButton" TargetType="Button" BasedOn="{StaticResource SeniorFriendlyButtonBase}">
        <Setter Property="Height" Value="55"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="160"/>
        <Setter Property="Background" Value="#2196F3"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#1976D2"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1976D2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Success Button with Clear Visual Feedback -->
    <Style x:Key="LargeSuccessButton" TargetType="Button" BasedOn="{StaticResource SeniorFriendlyButtonBase}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="Background" Value="#4CAF50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#388E3C"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#388E3C"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Danger/Cancel Button with Clear Visual Feedback -->
    <Style x:Key="LargeDangerButton" TargetType="Button" BasedOn="{StaticResource SeniorFriendlyButtonBase}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="MinWidth" Value="140"/>
        <Setter Property="Background" Value="#F44336"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#D32F2F"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D32F2F"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced Input Controls for Seniors -->
    <Style x:Key="SeniorFriendlyTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="CaretBrush" Value="#2196F3"/>
        <Setter Property="SelectionBrush" Value="#BBDEFB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#2196F3"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="3"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#2196F3" Direction="270" ShadowDepth="0" BlurRadius="8" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1976D2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#F5F5F5"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#E0E0E0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Enhanced ComboBox for Better Accessibility -->
    <Style x:Key="SeniorFriendlyComboBox" TargetType="ComboBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#2196F3"/>
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#1976D2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced DatePicker for Seniors -->
    <Style x:Key="SeniorFriendlyDatePicker" TargetType="DatePicker">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="12,10"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#2196F3"/>
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced CheckBox with Better Visibility -->
    <Style x:Key="SeniorFriendlyCheckBox" TargetType="CheckBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="CheckBoxBorder"
                                Width="24" Height="24"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Path x:Name="CheckMark"
                                  Width="14" Height="14"
                                  Stroke="#FFFFFF"
                                  StrokeThickness="3"
                                  Data="M2,6 L6,10 L14,2"
                                  Visibility="Collapsed"/>
                        </Border>
                        <ContentPresenter Margin="8,0,0,0"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="#4CAF50"/>
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#388E3C"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#2196F3"/>
                            <Setter TargetName="CheckBoxBorder" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#1976D2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Large Expander Style for Better Organization -->
    <Style x:Key="SeniorFriendlyExpander" TargetType="Expander">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="Background" Value="#F8F9FA"/>
        <Setter Property="BorderBrush" Value="#DEE2E6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
                        <StackPanel>
                            <ToggleButton x:Name="ExpanderButton"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          Height="45"
                                          HorizontalContentAlignment="Left"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock x:Name="ExpanderArrow" 
                                               Text="▶" 
                                               FontSize="12"
                                               VerticalAlignment="Center"
                                               Margin="0,0,8,0"/>
                                    <ContentPresenter Content="{TemplateBinding Header}"/>
                                </StackPanel>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpanderContent"
                                              Visibility="Collapsed"
                                              Margin="10,0,10,10"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ExpanderArrow" Property="Text" Value="▼"/>
                        </Trigger>
                        <Trigger SourceName="ExpanderButton" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E3F2FD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Error and Validation Message Styles -->
    <Style x:Key="ErrorMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#F44336"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="SuccessMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#4CAF50"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="InfoMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#2196F3"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- Enhanced ToolTip Style -->
    <Style x:Key="SeniorFriendlyToolTip" TargetType="ToolTip">
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>