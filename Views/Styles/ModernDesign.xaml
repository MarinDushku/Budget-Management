<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:BudgetManagement.Converters">

    <!-- ===== VALUE CONVERTERS ===== -->
    
    <!-- Count to Visibility Converter -->
    <converters:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
    
    <!-- Time Period to String Converter -->
    <converters:TimePeriodToStringConverter x:Key="TimePeriodToStringConverter"/>
    
    <!-- Boolean to Status Converter -->
    <converters:BooleanToStatusConverter x:Key="BooleanToStatusConverter"/>
    
    <!-- Boolean to Visibility Converter -->
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <!-- Boolean to Status Color Converter -->
    <converters:BooleanToStatusColorConverter x:Key="BooleanToStatusColorConverter"/>
    
    <!-- Null to Visibility Converter -->
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>

    <!-- ===== MODERN COLOR PALETTE ===== -->
    
    <!-- Primary Colors (Trust & Reliability) -->
    <SolidColorBrush x:Key="PrimaryBlueBrush" Color="#0078D4"/>
    <SolidColorBrush x:Key="SecondaryNavyBrush" Color="#004578"/>
    <SolidColorBrush x:Key="AccentGreenBrush" Color="#107C10"/>
    <SolidColorBrush x:Key="WarningOrangeBrush" Color="#FF8C00"/>
    <SolidColorBrush x:Key="DangerRedBrush" Color="#C62828"/>
    <SolidColorBrush x:Key="SuccessGreenBrush" Color="#0F7B0F"/>
    
    <!-- Neutral Foundation -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="#FAFAFA"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SurfaceElevatedBrush" Color="#F5F5F5"/>
    <SolidColorBrush x:Key="BorderLightBrush" Color="#E1E1E1"/>
    <SolidColorBrush x:Key="BorderMediumBrush" Color="#C4C4C4"/>
    
    <!-- Text Hierarchy - Enhanced for Senior Readability -->
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="#121212"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="#484848"/>
    <SolidColorBrush x:Key="DisabledTextBrush" Color="#8A8A8A"/>
    
    <!-- Dark Mode Support (for future implementation) -->
    <SolidColorBrush x:Key="BackgroundDarkBrush" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="SurfaceDarkBrush" Color="#2D2D30"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#0086F0"/>
    <SolidColorBrush x:Key="TextDarkBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SecondaryTextDarkBrush" Color="#CCCCCC"/>
    
    <!-- ===== MODERN EFFECTS & SHADOWS ===== -->
    
    <!-- Modern Card Shadow - Enhanced for Contemporary Feel -->
    <DropShadowEffect x:Key="ModernCardShadow" BlurRadius="12" Direction="270" 
                      Opacity="0.06" ShadowDepth="2" Color="#000000"/>
    
    <!-- Elevated Card Shadow - More Prominent -->
    <DropShadowEffect x:Key="ElevatedCardShadow" BlurRadius="16" Direction="270" 
                      Opacity="0.10" ShadowDepth="6" Color="#000000"/>
    
    <!-- Modern Focus Ring - Enhanced Visibility -->
    <DropShadowEffect x:Key="ModernFocusRing" Color="#0078D4" BlurRadius="6" 
                      ShadowDepth="0" Opacity="0.8"/>
    
    <!-- Subtle Button Shadow - Refined -->
    <DropShadowEffect x:Key="ButtonShadow" BlurRadius="6" Direction="270" 
                      Opacity="0.08" ShadowDepth="2" Color="#000000"/>
    
    <!-- ===== MODERN GRADIENTS ===== -->
    
    <!-- Header Gradient -->
    <LinearGradientBrush x:Key="HeaderGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#0078D4" Offset="0"/>
        <GradientStop Color="#106EBE" Offset="1"/>
    </LinearGradientBrush>
    
    <!-- Success Gradient -->
    <LinearGradientBrush x:Key="SuccessGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#107C10" Offset="0"/>
        <GradientStop Color="#0D5E0D" Offset="1"/>
    </LinearGradientBrush>
    
    <!-- Warning Gradient -->
    <LinearGradientBrush x:Key="WarningGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF8C00" Offset="0"/>
        <GradientStop Color="#E07600" Offset="1"/>
    </LinearGradientBrush>
    
    <!-- ===== MODERN TYPOGRAPHY ===== -->
    
    <!-- Display Text (Large Financial Figures) - Enhanced for Senior Readability -->
    <Style x:Key="DisplayTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="LineHeight" Value="42"/>
    </Style>
    
    <!-- Header Text - Enhanced Size for Prominence -->
    <Style x:Key="ModernHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="LineHeight" Value="32"/>
    </Style>
    
    <!-- Section Header Text -->
    <Style x:Key="SectionHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>
    
    <!-- Body Text - Enhanced for Senior Readability -->
    <Style x:Key="BodyTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="LineHeight" Value="26"/>
    </Style>
    
    <!-- Secondary Text - Larger for Better Readability -->
    <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="LineHeight" Value="22"/>
    </Style>
    
    <!-- Caption Text - Improved for Senior Accessibility -->
    <Style x:Key="CaptionTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>
    
    <!-- ===== MODERN BUTTON STYLES ===== -->
    
    <!-- Primary Button - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernPrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,14"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="8" Padding="{TemplateBinding Padding}"
                            Effect="{StaticResource ButtonShadow}">
                        <ContentPresenter x:Name="contentPresenter" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#1084D8" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#0078D4" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#0969C3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Success Button - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernSuccessButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentGreenBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,14"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="8" Padding="{TemplateBinding Padding}"
                            Effect="{StaticResource ButtonShadow}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#128C12" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#107C10" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#0F6B0F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Secondary Button - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernSecondaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderMediumBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="20,14"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#F5F5F5" Duration="0:0:0.15"/>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#0078D4" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#FFFFFF" Duration="0:0:0.15"/>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#C4C4C4" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource BorderLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Danger Button - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernDangerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DangerRedBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,14"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="8" Padding="{TemplateBinding Padding}"
                            Effect="{StaticResource ButtonShadow}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#D32F2F" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                      To="#C62828" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="#B71C1C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ===== MODERN CARD STYLES ===== -->
    
    <!-- Standard Modern Card - Enhanced Design -->
    <Style x:Key="ModernCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="Effect" Value="{StaticResource ModernCardShadow}"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                           To="1.02" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                           To="1.02" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                           To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                           To="1.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Elevated Modern Card -->
    <Style x:Key="ElevatedCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="32"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Effect" Value="{StaticResource ElevatedCardShadow}"/>
    </Style>
    
    <!-- Summary Card (for financial data) -->
    <Style x:Key="SummaryCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="MinHeight" Value="120"/>
        <Setter Property="Effect" Value="{StaticResource ModernCardShadow}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                           To="1.01" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                           To="1.01" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                           To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                           To="1.0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ===== MODERN INPUT CONTROLS ===== -->
    
    <!-- Modern TextBox - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="MinHeight" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#C4C4C4" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#E1E1E1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#0078D4" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" 
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                      To="#E1E1E1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Modern ComboBox - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="MinHeight" Value="48"/>
    </Style>
    
    <!-- Modern DatePicker - Enhanced for Senior Accessibility -->
    <Style x:Key="ModernDatePickerStyle" TargetType="DatePicker">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="MinHeight" Value="48"/>
    </Style>
    
    <!-- ===== MODERN PANEL STYLES ===== -->
    
    <!-- Main Content Panel -->
    <Style x:Key="MainContentPanelStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Padding" Value="20"/>
    </Style>
    
    <!-- Side Panel -->
    <Style x:Key="ModernSidePanelStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Effect" Value="{StaticResource ModernCardShadow}"/>
    </Style>
    
    <!-- Header Panel -->
    <Style x:Key="HeaderPanelStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource HeaderGradientBrush}"/>
        <Setter Property="Padding" Value="24,16"/>
        <Setter Property="CornerRadius" Value="0,0,12,12"/>
    </Style>
    
    <!-- ===== MODERN FOCUS VISUAL STYLE ===== -->
    
    <Style x:Key="ModernFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{DynamicResource PrimaryBlueBrush}" 
                               StrokeThickness="2" 
                               StrokeDashArray="3 2" 
                               SnapsToDevicePixels="True"
                               RadiusX="4" RadiusY="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Apply modern focus visual to all controls -->
    <Style TargetType="Control">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualStyle}"/>
    </Style>
    
    <!-- ===== MODERN SCROLLBAR ===== -->
    
    <Style x:Key="ModernScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BorderMediumBrush}"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="{TemplateBinding Background}">
                        <Track x:Name="PART_Track" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ModernScrollBarThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ModernScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource BorderMediumBrush}" 
                            CornerRadius="6" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ===== MODERN NAVIGATION STYLES ===== -->
    
    <!-- Navigation Rail Container -->
    <Style x:Key="NavigationRailStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Width" Value="280"/>
        <Setter Property="MinWidth" Value="60"/>
    </Style>
    
    <!-- Navigation Item Style -->
    <Style x:Key="NavigationItemStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="8,2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="6" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition Width="12"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Selection Indicator -->
                            <Border x:Name="SelectionIndicator" Grid.Column="0" Grid.ColumnSpan="3" 
                                    Background="{DynamicResource PrimaryBlueBrush}" CornerRadius="6" 
                                    Opacity="0"/>
                            
                            <!-- Icon -->
                            <TextBlock x:Name="IconText" Grid.Column="0" 
                                      FontFamily="Segoe Fluent Icons" FontSize="16" 
                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                      Text="{TemplateBinding Tag}"/>
                            
                            <!-- Label -->
                            <TextBlock x:Name="LabelText" Grid.Column="2" 
                                      Text="{TemplateBinding Content}" 
                                      VerticalAlignment="Center"
                                      TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionIndicator" 
                                                       Storyboard.TargetProperty="Opacity" 
                                                       To="0.1" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionIndicator" 
                                                       Storyboard.TargetProperty="Opacity" 
                                                       To="0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Selected Navigation Item Style -->
    <Style x:Key="SelectedNavigationItemStyle" TargetType="Button" BasedOn="{StaticResource NavigationItemStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <!-- Navigation Section Header -->
    <Style x:Key="NavigationSectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="Margin" Value="16,16,16,8"/>
    </Style>
    
    <!-- Main Content Container (to accommodate navigation) -->
    <Style x:Key="MainContentContainerStyle" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Margin" Value="0"/>
    </Style>
    
    <!-- ===== ANIMATION RESOURCES ===== -->
    
    <!-- Navigation Item Hover Animation -->
    <Storyboard x:Key="NavigationItemHoverAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         To="0.1" Duration="0:0:0.15"/>
    </Storyboard>
    
    <!-- Page Transition Animation -->
    <Storyboard x:Key="PageTransitionAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" Duration="0:0:0.3"/>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           From="20,0,0,0" To="0,0,0,0" Duration="0:0:0.3"/>
    </Storyboard>
    
    <!-- Hover Animation -->
    <Storyboard x:Key="ButtonHoverAnimation">
        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                        To="#1084D8" Duration="0:0:0.15"/>
    </Storyboard>
    
    <!-- Focus Animation -->
    <Storyboard x:Key="FocusAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" 
                         To="0.8" Duration="0:0:0.2"/>
    </Storyboard>
    
    <!-- Scale Animation for Cards -->
    <Storyboard x:Key="CardHoverAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1.02" Duration="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1.02" Duration="0:0:0.2"/>
    </Storyboard>
    
    <!-- ===== ADVANCED ANIMATIONS & FEEDBACK ===== -->
    
    <!-- Button Press Feedback Animation -->
    <Storyboard x:Key="ButtonPressAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="0.95" Duration="0:0:0.1" AutoReverse="True"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="0.95" Duration="0:0:0.1" AutoReverse="True"/>
    </Storyboard>
    
    <!-- Loading Pulse Animation -->
    <Storyboard x:Key="LoadingPulseAnimation" RepeatBehavior="Forever">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0.4" To="1.0" Duration="0:0:1" 
                         AutoReverse="True"/>
    </Storyboard>
    
    <!-- Loading Spinner Animation -->
    <Storyboard x:Key="LoadingSpinnerAnimation" RepeatBehavior="Forever">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                         From="0" To="360" Duration="0:0:1"/>
    </Storyboard>
    
    <!-- Success Feedback Animation -->
    <Storyboard x:Key="SuccessFeedbackAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         From="0.8" To="1.05" Duration="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         From="0.8" To="1.05" Duration="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" Duration="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         To="1.0" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         To="1.0" Duration="0:0:0.1" BeginTime="0:0:0.2"/>
    </Storyboard>
    
    <!-- Error Shake Animation -->
    <Storyboard x:Key="ErrorShakeAnimation">
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           To="5,0,0,0" Duration="0:0:0.05"/>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           To="-5,0,0,0" Duration="0:0:0.05" BeginTime="0:0:0.05"/>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           To="3,0,0,0" Duration="0:0:0.05" BeginTime="0:0:0.1"/>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           To="-3,0,0,0" Duration="0:0:0.05" BeginTime="0:0:0.15"/>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           To="0,0,0,0" Duration="0:0:0.05" BeginTime="0:0:0.2"/>
    </Storyboard>
    
    <!-- Slide Up Animation -->
    <Storyboard x:Key="SlideUpAnimation">
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           From="0,30,0,-30" To="0,0,0,0" Duration="0:0:0.4">
            <ThicknessAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" Duration="0:0:0.3"/>
    </Storyboard>
    
    <!-- Fade In Animation -->
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" Duration="0:0:0.4">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    
    <!-- Fade Out Animation -->
    <Storyboard x:Key="FadeOutAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="1" To="0" Duration="0:0:0.3">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseIn"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    
    <!-- Enhanced Page Transition with Scale -->
    <Storyboard x:Key="EnhancedPageTransitionAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                         From="0" To="1" Duration="0:0:0.5">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                         From="0.95" To="1.0" Duration="0:0:0.5">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                         From="0.95" To="1.0" Duration="0:0:0.5">
            <DoubleAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ThicknessAnimation Storyboard.TargetProperty="Margin" 
                           From="0,20,0,-20" To="0,0,0,0" Duration="0:0:0.5">
            <ThicknessAnimation.EasingFunction>
                <QuadraticEase EasingMode="EaseOut"/>
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
    </Storyboard>
    
    <!-- ===== LOADING STATE STYLES ===== -->
    
    <!-- Loading Spinner Style -->
    <Style x:Key="LoadingSpinnerStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Text" Value="&#xE1CD;"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource LoadingSpinnerAnimation}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Skeleton Loading Style -->
    <Style x:Key="SkeletonLoadingStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceElevatedBrush}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="0,2"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource LoadingPulseAnimation}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ===== FEEDBACK NOTIFICATION STYLES ===== -->
    
    <!-- Success Notification Style -->
    <Style x:Key="SuccessNotificationStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource AccentGreenBrush}"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="0,8"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SuccessFeedbackAnimation}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Error Notification Style -->
    <Style x:Key="ErrorNotificationStyle" TargetType="Border">
        <Setter Property="Background" Value="#D73527"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="0,8"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ErrorShakeAnimation}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Info Notification Style -->
    <Style x:Key="InfoNotificationStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueBrush}"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="0,8"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource SlideUpAnimation}"/>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Notification Text Style -->
    <Style x:Key="NotificationTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI Variable, Segoe UI, Verdana, Tahoma, sans-serif"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
    </Style>
    
</ResourceDictionary>